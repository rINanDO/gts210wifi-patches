From fa6aca743ac43fd9d50c9f8a19f83aca679bac92 Mon Sep 17 00:00:00 2001
From: Dominggoes Isakh <drjisakh@gmail.com>
Date: Sun, 9 Feb 2025 11:59:57 -0500
Subject: [PATCH 10/14] BpfMap: Ignore missing mapFd for BPF-less devices

Change-Id: Iea37b1a226c5837a0bced36b33bc621f64c7dd57
---
 .../com/android/net/module/util/BpfMap.java       | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/staticlibs/device/com/android/net/module/util/BpfMap.java b/staticlibs/device/com/android/net/module/util/BpfMap.java
index 0fbc25de7b..2afa4c7724 100644
--- a/staticlibs/device/com/android/net/module/util/BpfMap.java
+++ b/staticlibs/device/com/android/net/module/util/BpfMap.java
@@ -135,6 +135,8 @@ public class BpfMap<K extends Struct, V extends Struct> implements IBpfMap<K, V>
      */
     @Override
     public void updateEntry(K key, V value) throws ErrnoException {
+        if (mMapFd == null) return;
+
         nativeWriteToMapEntry(mMapFd.getFd(), key.writeToBytes(), value.writeToBytes(), BPF_ANY);
     }
 
@@ -145,6 +147,8 @@ public class BpfMap<K extends Struct, V extends Struct> implements IBpfMap<K, V>
     @Override
     public void insertEntry(K key, V value)
             throws ErrnoException, IllegalStateException {
+        if (mMapFd == null) return;
+
         try {
             nativeWriteToMapEntry(mMapFd.getFd(), key.writeToBytes(), value.writeToBytes(),
                     BPF_NOEXIST);
@@ -162,6 +166,8 @@ public class BpfMap<K extends Struct, V extends Struct> implements IBpfMap<K, V>
     @Override
     public void replaceEntry(K key, V value)
             throws ErrnoException, NoSuchElementException {
+        if (mMapFd == null) return;
+
         try {
             nativeWriteToMapEntry(mMapFd.getFd(), key.writeToBytes(), value.writeToBytes(),
                     BPF_EXIST);
@@ -181,6 +187,8 @@ public class BpfMap<K extends Struct, V extends Struct> implements IBpfMap<K, V>
     @Override
     public boolean insertOrReplaceEntry(K key, V value)
             throws ErrnoException {
+        if (mMapFd == null) return false;
+
         try {
             nativeWriteToMapEntry(mMapFd.getFd(), key.writeToBytes(), value.writeToBytes(),
                     BPF_NOEXIST);
@@ -207,11 +215,14 @@ public class BpfMap<K extends Struct, V extends Struct> implements IBpfMap<K, V>
     /** Remove existing key from eBpf map. Return false if map was not modified. */
     @Override
     public boolean deleteEntry(K key) throws ErrnoException {
+        if (mMapFd == null) return false;
+
         return nativeDeleteMapEntry(mMapFd.getFd(), key.writeToBytes());
     }
 
     private K getNextKeyInternal(@Nullable K key) throws ErrnoException {
         byte[] rawKey = new byte[mKeySize];
+        if (mMapFd == null) return null;
 
         if (!nativeGetNextMapKey(mMapFd.getFd(),
                                  key == null ? null : key.writeToBytes(),
@@ -243,6 +254,8 @@ public class BpfMap<K extends Struct, V extends Struct> implements IBpfMap<K, V>
     /** Check whether a key exists in the map. */
     @Override
     public boolean containsKey(@NonNull K key) throws ErrnoException {
+        if (mMapFd == null) return false;
+
         Objects.requireNonNull(key);
 
         byte[] rawValue = new byte[mValueSize];
@@ -252,6 +265,8 @@ public class BpfMap<K extends Struct, V extends Struct> implements IBpfMap<K, V>
     /** Retrieve a value from the map. Return null if there is no such key. */
     @Override
     public V getValue(@NonNull K key) throws ErrnoException {
+        if (mMapFd == null) return null;
+
         Objects.requireNonNull(key);
 
         byte[] rawValue = new byte[mValueSize];
-- 
2.45.2

