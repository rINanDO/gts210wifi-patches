From 4c07b1ea1ab06b361a8f05fb6f3cbcf4661be058 Mon Sep 17 00:00:00 2001
From: khalvat-M <mmba313@gmail.com>
Date: Thu, 27 Jun 2024 02:17:11 +0330
Subject: [PATCH 13/15] [UL] netbpfload: Support no-bpf usecase

Based on https://github.com/LineageOS-UL/android_system_bpf/commit/5519c18abea64769e65f6773590195ac5d54af50
---
 netbpfload/NetBpfLoad.cpp | 11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

diff --git a/netbpfload/NetBpfLoad.cpp b/netbpfload/NetBpfLoad.cpp
index 9b71eaaa35..4d33911a95 100644
--- a/netbpfload/NetBpfLoad.cpp
+++ b/netbpfload/NetBpfLoad.cpp
@@ -345,8 +345,7 @@ int main(int argc, char** argv, char * const envp[]) {
         // but we need 0 (enabled)
         // (this writeFile is known to fail on at least 4.19, but always defaults to 0 on
         // pre-5.13, on 5.13+ it depends on CONFIG_BPF_UNPRIV_DEFAULT_OFF)
-        if (writeProcSysFile("/proc/sys/kernel/unprivileged_bpf_disabled", "0\n") &&
-            android::bpf::isAtLeastKernelVersion(5, 13, 0)) return 1;
+        writeProcSysFile("/proc/sys/kernel/unprivileged_bpf_disabled", "0\n");
 
         // Enable the eBPF JIT -- but do note that on 64-bit kernels it is likely
         // already force enabled by the kernel config option BPF_JIT_ALWAYS_ON.
@@ -354,14 +353,12 @@ int main(int argc, char** argv, char * const envp[]) {
         //  kernel does not have CONFIG_BPF_JIT=y)
         // BPF_JIT is required by R VINTF (which means 4.14/4.19/5.4 kernels),
         // but 4.14/4.19 were released with P & Q, and only 5.4 is new in R+.
-        if (writeProcSysFile("/proc/sys/net/core/bpf_jit_enable", "1\n") &&
-            android::bpf::isAtLeastKernelVersion(4, 14, 0)) return 1;
+        writeProcSysFile("/proc/sys/net/core/bpf_jit_enable", "1\n");
 
         // Enable JIT kallsyms export for privileged users only
         // (Note: this (open) will fail with ENOENT 'No such file or directory' if
         //  kernel does not have CONFIG_HAVE_EBPF_JIT=y)
-        if (writeProcSysFile("/proc/sys/net/core/bpf_jit_kallsyms", "1\n") &&
-            android::bpf::isAtLeastKernelVersion(4, 14, 0)) return 1;
+        writeProcSysFile("/proc/sys/net/core/bpf_jit_kallsyms", "1\n");
     }
 
     // Create all the pin subdirectories
@@ -369,7 +366,7 @@ int main(int argc, char** argv, char * const envp[]) {
     //  which could otherwise fail with ENOENT during object pinning or renaming,
     //  due to ordering issues)
     for (const auto& location : locations) {
-        if (createSysFsBpfSubDir(location.prefix)) return 1;
+        if (createSysFsBpfSubDir(location.prefix)) failed = true;
     }
 
     // Note: there's no actual src dir for fs_bpf_loader .o's,
-- 
2.45.2

