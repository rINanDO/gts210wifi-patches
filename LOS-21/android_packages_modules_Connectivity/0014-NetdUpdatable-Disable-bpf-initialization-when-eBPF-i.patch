From d7fce3f2d8eb1953f136ff48dc1ceffa1a523ef5 Mon Sep 17 00:00:00 2001
From: Dominggoes Isakh <drjisakh@gmail.com>
Date: Wed, 12 Oct 2022 15:27:37 +0200
Subject: [PATCH 14/15] NetdUpdatable: Disable bpf initialization when eBPF is
 not available

Change-Id: I3f6aac7baae3945fe825c196008cea3c3097c066
Change-Id: Ia99e1703da175ae16d8b47b23185054b33d7204b
---
 netd/NetdUpdatable.cpp | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/netd/NetdUpdatable.cpp b/netd/NetdUpdatable.cpp
index 8b9e5a759c..681ea64e22 100644
--- a/netd/NetdUpdatable.cpp
+++ b/netd/NetdUpdatable.cpp
@@ -19,6 +19,7 @@
 #include "BpfHandler.h"
 
 #include <android-base/logging.h>
+#include <cutils/properties.h>
 #include <netdutils/Status.h>
 
 #include "NetdUpdatablePublic.h"
@@ -29,10 +30,14 @@ int libnetd_updatable_init(const char* cg2_path) {
     android::base::InitLogging(/*argv=*/nullptr);
     LOG(INFO) << __func__ << ": Initializing";
 
-    android::netdutils::Status ret = sBpfHandler.init(cg2_path);
-    if (!android::netdutils::isOk(ret)) {
-        LOG(ERROR) << __func__ << ": Failed. " << ret.code() << " " << ret.msg();
-        return -ret.code();
+    char value[PROP_VALUE_MAX] = "";
+    bool ebpf_supported = __system_property_get("ro.kernel.ebpf.supported", value) != 0 || strcmp(value, "false") == 0;
+    if (ebpf_supported) {
+        android::netdutils::Status ret = sBpfHandler.init(cg2_path);
+        if (!android::netdutils::isOk(ret)) {
+            LOG(ERROR) << __func__ << ": Failed. " << ret.code() << " " << ret.msg();
+            return -ret.code();
+        }
     }
     return 0;
 }
-- 
2.45.2

